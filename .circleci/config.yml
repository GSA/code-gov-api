version: 2
jobs:
  build:
    working_directory: ~/code-gov-api
    docker:
      - image: circleci/node:boron
    steps:
      - checkout
      - run: 
          name: download-cc-test-reporter
          command: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - run: 
          name: make-test-reporter-executable
          command: chmod +x ./cc-test-reporter
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-node-modules
          command: npm install --all
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          command: ./cc-test-reporter before-build
      - run:
          name: run-linter
          command: npm run lint
      - run:
          name: run-test
          command: npm test
      - run:
          name: upload-test-report
          command: |
             ./cc-test-reporter after-build -t lcov -p build/ --exit-code $?
      - store_test_results:
          path: build/test-results/results.xml
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: build/coverage
          prefix: coverage
      
      # Install Cloud Foundry cli (cf) before deploy step. cf is used to push project to Cloud.gov
      - run:
          name: install-cf-cli
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v

      # Production deployment.
      - deploy:
          command: |
            if [ "${CIRCLE_TAG}" =~ "${DEPLOY_TAG_PATTERN}" ]; then
              cf login -a ${CF_URL} -u ${CF_PRODUCTION_DEPLOYER} -p ${CF_PRODUCTION_DEPLOYER_PASS} -o ${CF_ORG} -s ${CF_PRODUCTION_SPACE}
              cf push ${CF_APP}
            fi

      # Staging deployment.
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "${STAGING_DEPLOY_BRANCH}" ]; then
              cf login -a ${CF_URL} -u ${CF_STAGING_DEPLOYER} -p ${CF_STAGING_DEPLOYER_PASS} -o ${CF_ORG} -s ${CF_STAGING_SPACE}
              cf push ${CF_APP}
            fi
