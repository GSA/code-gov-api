version: 2
jobs:
  build:
    working_directory: ~/code-gov-api
    docker:
      - image: circleci/node:boron
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-node-modules
          command: npm install --all
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
              - ./node_modules
      - run:
          name: run-linter
          command: npm run lint
      - run:
          name: run-test
          command: npm test
      - run:
          name: upload-test-report
          command: |
              npm install codeclimate-test-reporter
              ./node_modules/.bin/codeclimate-test-reporter < build/coverage/lcov.info
      - store_test_results:
          path: build/test-results/results.xml
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: build/coverage
          prefix: coverage
      
      # Install Cloud Foundry cli (cf) before deploy step. cf is used to push project to Cloud.gov
      - run:
          name: install-cf-cli
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v

      # Production deployment.
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              cf login -a ${CF_URL} -u ${CF_DEPLOYER_USER} -p ${CF_PASS} -o ORG -s ${CF_PROD_SPACE}
              cf push
            fi
      
      # Staging deployment.
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              cf login -a ${CF_URL} -u ${CF_DEPLOYER_USER} -p ${CF_PASS} -o ORG -s ${CF_STAGING_SPACE}
              cf push
            fi
      
      # Development deployment.
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              cf login -a ${CF_URL} -u ${CF_DEPLOYER_USER} -p ${CF_PASS} -o ORG -s ${CF_DEV_SPACE}
              cf push
            fi