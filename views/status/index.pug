extends ../layout

block content
  h1(style="padding: 10px 10px 0 10px; margin: 10px 10px 0 10px;")
    ="Alpha Source Code Policy Compliance Dashboard"
  p(style="padding: 10px 10px 0 10px; margin: 10px 10px 0 10px;")
    ="This page shows each agency's status with regards to compliance with the Federal Source Code Policy. It is not publicly available and is designed for technical points of contact at agencies as they help their agencies achieve compliance. Portions of this information will be made available in the future publicly on code.gov."
    br
    br
    ul(style="margin-top: 0;")
      li
        ="RED status indicates that an agency has not completely met the requirement to update its agency policy AND that its code.json is not fully compliant."
      li
        ="YELLOW status indicates that an agency has not completely met the requirement to update its agency policy OR that its code.json is not fully compliant."
      li
        ="GREEN status means that both topline requirements have been met."
    p(style="padding: 10px; margin: 10px;")
      ="The technical notes and Issues page now include 'Requested Enhancements' which are not mandatory and do not impact agencies' green/yellow/red status."
    p(style="padding: 10px; margin: 10px;")
      i Last Updated:&nbsp;
        =statusData.timestamp  

  -
    var statusDataArr = [];
    for (var agency in statusData.statuses) {
      statusDataArr.push(statusData.statuses[agency]);
    }
    statusDataArr = statusDataArr.sort(function (a, b) {
      aName = a.metadata.agency.acronym;
      bName = b.metadata.agency.acronym;
      if (aName > bName) {
        return 1;
      } else if (bName > aName) {
        return -1;
      }
      return 0;
    });
  table
    tr
      th(colspan=2) Agency or Organization
      th Agency Policy Updated
      th OpenSource Requirement
      th Inventory Requirement
      th Inventory Published, Compliant
      th Code.json Link
      th Schema Version
      th(style="width:400px;") Technical Notes
      th Issues
      th Discovered
    each data in statusDataArr
      tr
        
        if data.metadata.agency.requirements.overallCompliance <=0
          if data.metadata.agency.requirements.overallCompliance == 0  
            td.failure
              =data.metadata.agency.acronym 
            td.failure
              =data.metadata.agency.name              
          else
            td
              =data.metadata.agency.acronym
            td
              =data.metadata.agency.name
        else if data.metadata.agency.requirements.overallCompliance <1
          td.warning
            =data.metadata.agency.acronym 
          td.warning
            =data.metadata.agency.name
        else if data.metadata.agency.requirements.overallCompliance >=1
          td.success
            =data.metadata.agency.acronym 
          td.success
            =data.metadata.agency.name
        else
          td
            =data.metadata.agency.acronym
          td
            =data.metadata.agency.name
        
        if data.metadata.agency.requirements.agencyWidePolicy <=0
          if data.metadata.agency.requirements.agencyWidePolicy == 0
            td(style="background:none")
              .failure.bold
                ="Incomplete"
          else
            td
              .grey
                ="N/A"
        else if data.metadata.agency.requirements.agencyWidePolicy <1
          td(style="background:none")
            .warning.bold
              ="Partially complete"   
        else 
          td(style="background:none")
            .success.bold
              ="Complete"
        if data.metadata.agency.requirements.inventoryRequirement <=0
          if data.metadata.agency.requirements.inventoryRequirement == 0
            td(style="background:none")
              .failure.bold
                ="Incomplete"
          else
            td
              .grey
                ="N/A"
        else if data.metadata.agency.requirements.inventoryRequirement <1
          td(style="background:none")
            .warning.bold
              ="Partially complete"   
        else 
          td(style="background:none")
            .success.bold
              ="Complete"
              
        if data.metadata.agency.requirements.openSourceRequirement <=0
          if data.metadata.agency.requirements.openSourceRequirement == 0
            td(style="background:none")
              .failure.bold
                ="Incomplete"
          else
            td
              .grey
                ="N/A"
        else if data.metadata.agency.requirements.openSourceRequirement <1
          td(style="background:none")
            .warning.bold
              ="Partially complete"   
        else 
          td(style="background:none")
            .success.bold
              ="Complete"


        if data.metadata.agency.requirements.schemaFormat <=0
          if data.metadata.agency.requirements.schemaFormat == 0  
            td(style="background:none")
              .failure.bold
                ="Incomplete"
          else
            td
              .grey
                ="N/A"
        else if data.metadata.agency.requirements.schemaFormat <1
          td(style="background:none")
            .warning.bold
              ="Partially complete"   
        else 
          td(style="background:none")
            .success.bold
              ="Complete"
        
        td
          a(href=data.metadata.agency.codeUrl)
            =data.metadata.agency.codeUrl
        td
          =data.version
        td
          =data.status
        td
          if data.issues.length
            a(href="status/" + data.metadata.agency.acronym + "/issues") view issues &rarr;
        td
          a(href="status/" + data.metadata.agency.acronym + "/discovered") view discovered repos &rarr;
  p(style="text-align: right; padding-right: 10px;")
    i Last Updated:&nbsp;
      =statusData.timestamp
